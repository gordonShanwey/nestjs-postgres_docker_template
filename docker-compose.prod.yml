name: backend_template
services:


  app:
    image: # Specify your Docker Hub username and image name
    env_file: .env
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 1m
    container_name: backend_template
    networks:
      - backend_template
    environment:
      - PORT=3000
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_HOST=${POSTGRES_HOST}
    ports:
      - '3000:3000'
    depends_on:
      db:
        condition: service_healthy


  db:
    image: postgres
    env_file: .env
    restart: always
    networks:
      - form_server_prod
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_HOST=${POSTGRES_HOST}
    container_name: form_server_db_prod
    volumes:
      - pg-volume-prod:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pg-volume-prod:

networks:
  form_server_prod:
