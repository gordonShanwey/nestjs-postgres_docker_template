name: backend_template
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: backend_template
    environment:
      - PORT=3000
    ports:
      - '3000:3000'
    depends_on:
      - db
    volumes:
      - .:/user/src/app
    command: npm run start:dev
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 1m

  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    container_name: backend_template_db_dev
    volumes:
      - pg-volume:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: backend_template_pgadmin_dev
    image: dpage/pgadmin4
    logging:
      driver: none
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - '5050:80'
    depends_on:
      - db
volumes:
  pg-volume:

